{"ast":null,"code":"var _jsxFileName = \"/Users/james/git/minesweeper/src/components/tile/tile.jsx\";\nimport React from 'react';\nimport { updateShowingTiles } from '../../actions/tile-action';\nimport { connect } from 'react-redux';\nimport './tile.scss';\n\nfunction Tile(props) {\n  function selectTile(item) {\n    let replaceShowingTiles = [...props.showingTiles];\n    replaceShowingTiles.push(`${props.colIndex}${props.index}`);\n\n    if (item === -1) {\n      props.tileArr.forEach((col, colI) => {\n        col.forEach((row, rowI) => {\n          replaceShowingTiles.push(`${colI}${rowI}`);\n        });\n      });\n    } else if (item === null) {\n      clearTiles(props.colIndex, props.index);\n    }\n\n    function clearTiles(col, row) {\n      if (replaceShowingTiles.filter(tile => tile === `${col}${row}`).length > 1) return;\n\n      for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n          if (props.tileArr[col + i] !== undefined && props.tileArr[col + i][row + j] !== undefined && props.tileArr[col + i][row + j] !== -1) {\n            replaceShowingTiles.push(`${col + i}${row + j}`);\n\n            if (props.tileArr[col + i][row + j] === null) {\n              clearTiles(col + i, row + j);\n            }\n          }\n        }\n      }\n    }\n\n    props.onupdateShowingTiles(replaceShowingTiles);\n  }\n\n  return React.createElement(\"div\", {\n    className: props.showingTiles.filter(tile => tile === `${props.colIndex}${props.index}`).length > 0 ? `un-cover ${props.colIndex}${props.index}` : `cover tile ${props.colIndex}${props.index}`,\n    onClick: () => selectTile(props.tile),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.tile < 0 ? React.createElement(\"div\", {\n    className: \"tile\",\n    onClick: props.bombClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"fas fa-bomb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    className: \"tile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.tile));\n}\n\nconst mapStateToProps = state => ({\n  showingTiles: state.showingTiles\n});\n\nconst mapActionsToProps = {\n  onupdateShowingTiles: updateShowingTiles\n};\nexport default connect(mapStateToProps, mapActionsToProps)(Tile);","map":{"version":3,"sources":["/Users/james/git/minesweeper/src/components/tile/tile.jsx"],"names":["React","updateShowingTiles","connect","Tile","props","selectTile","item","replaceShowingTiles","showingTiles","push","colIndex","index","tileArr","forEach","col","colI","row","rowI","clearTiles","filter","tile","length","i","j","undefined","onupdateShowingTiles","bombClick","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { updateShowingTiles } from '../../actions/tile-action';\nimport { connect } from 'react-redux';\n\nimport './tile.scss';\n\nfunction Tile(props) {\n\n    function selectTile(item) {\n        let replaceShowingTiles = [...props.showingTiles];\n        replaceShowingTiles.push(`${props.colIndex}${props.index}`);\n\n        if(item === -1) {\n            props.tileArr.forEach((col, colI) => {\n                col.forEach((row, rowI) => {\n                    replaceShowingTiles.push(`${colI}${rowI}`);\n                })\n            })\n        }\n\n        else if (item === null) {\n            clearTiles(props.colIndex, props.index);\n        }\n        function clearTiles(col, row) {\n            if(replaceShowingTiles.filter(tile => tile === `${col}${row}`).length > 1) return\n            for(let i = -1; i < 2; i++) {\n                for(let j = -1; j < 2; j++) {\n                    if(props.tileArr[col+i] !== undefined && props.tileArr[col+i][row+j] !== undefined && props.tileArr[col+i][row+j] !== -1) {\n                        replaceShowingTiles.push(`${col+i}${row+j}`);\n                        if(props.tileArr[col+i][row+j] === null) {\n                            clearTiles(col+i, row+j);\n                        }\n                    }\n                }\n            }\n        }\n        props.onupdateShowingTiles(replaceShowingTiles);\n    }\n    return (\n        <div className={ props.showingTiles.filter(tile => tile === `${props.colIndex}${props.index}`).length > 0 ? `un-cover ${props.colIndex}${props.index}` : `cover tile ${props.colIndex}${props.index}` } onClick={() => selectTile(props.tile)}>\n            {props.tile < 0 ? (\n                <div className=\"tile\" onClick={props.bombClick}><i class=\"fas fa-bomb\"></i></div>\n            ) : (\n                <div className=\"tile\">{props.tile}</div>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    showingTiles: state.showingTiles,\n});\n\nconst mapActionsToProps = {\n    onupdateShowingTiles: updateShowingTiles,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (Tile);"]},"metadata":{},"sourceType":"module"}