{"ast":null,"code":"import _slicedToArray from \"/Users/james/git/minesweeper/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/james/git/minesweeper/src/components/tile/tile.jsx\";\nimport React, { useState } from 'react';\nimport { updateShowingTiles } from '../../actions/tile-action';\nimport { connect } from 'react-redux';\nimport './tile.scss';\n\nfunction Tile(props) {\n  const _ref = function selectTile(item) {\n    let replaceShowingTiles = [...props.showingTiles];\n    replaceShowingTiles.push(`${props.colIndex}${props.index}`);\n\n    if (item === -1) {\n      alert(\"You lose!\");\n      props.tileArr.forEach((col, colI) => {\n        col.forEach((row, rowI) => {\n          replaceShowingTiles.push(`${colI}${rowI}`);\n        });\n      });\n    } else if (item === null) {\n      clearTiles(props.colIndex, props.index);\n    }\n\n    function clearTiles(col, row) {\n      if (replaceShowingTiles.filter(tile => tile === `${col}${row}`).length > 1) return;\n\n      for (let i = -1; i < 2; i++) {\n        for (let j = -1; j < 2; j++) {\n          if (props.tileArr[col + i] !== undefined && props.tileArr[col + i][row + j] !== undefined && props.tileArr[col + i][row + j] !== -1) {\n            replaceShowingTiles.push(`${col + i}${row + j}`);\n\n            if (props.tileArr[col + i][row + j] === null) {\n              clearTiles(col + i, row + j);\n            }\n          }\n        }\n      }\n    }\n\n    props.onupdateShowingTiles(replaceShowingTiles);\n  },\n        _ref2 = _slicedToArray(_ref, 2),\n        showExplosion = _ref2[0],\n        setExplosion = _ref2[1];\n\n  return React.createElement(\"div\", {\n    className: props.showingTiles.filter(tile => tile === `${props.colIndex}${props.index}`).length > 0 ? `un-cover tile ${props.colIndex}${props.index}` : `cover tile ${props.colIndex}${props.index}`,\n    onClick: () => selectTile(props.tile),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.tile < 0 ? React.createElement(\"i\", {\n    class: \"fas fa-bomb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, props.tile));\n}\n\nconst mapStateToProps = state => ({\n  showingTiles: state.showingTiles\n});\n\nconst mapActionsToProps = {\n  onupdateShowingTiles: updateShowingTiles\n};\nexport default connect(mapStateToProps, mapActionsToProps)(Tile);","map":{"version":3,"sources":["/Users/james/git/minesweeper/src/components/tile/tile.jsx"],"names":["React","useState","updateShowingTiles","connect","Tile","props","selectTile","item","replaceShowingTiles","showingTiles","push","colIndex","index","alert","tileArr","forEach","col","colI","row","rowI","clearTiles","filter","tile","length","i","j","undefined","onupdateShowingTiles","showExplosion","setExplosion","mapStateToProps","state","mapActionsToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { updateShowingTiles } from '../../actions/tile-action';\nimport { connect } from 'react-redux';\n\nimport './tile.scss';\n\nfunction Tile(props) {\n    const [showExplosion, setExplosion] = \n\n    function selectTile(item) {\n        let replaceShowingTiles = [...props.showingTiles];\n        replaceShowingTiles.push(`${props.colIndex}${props.index}`);\n\n        if(item === -1) {\n            alert(\"You lose!\");\n            props.tileArr.forEach((col, colI) => {\n                col.forEach((row, rowI) => {\n                    replaceShowingTiles.push(`${colI}${rowI}`);\n                })\n            })\n        }\n\n        else if (item === null) {\n            clearTiles(props.colIndex, props.index);\n        }\n        function clearTiles(col, row) {\n            if(replaceShowingTiles.filter(tile => tile === `${col}${row}`).length > 1) return\n            for(let i = -1; i < 2; i++) {\n                for(let j = -1; j < 2; j++) {\n                    if(props.tileArr[col+i] !== undefined && props.tileArr[col+i][row+j] !== undefined && props.tileArr[col+i][row+j] !== -1) {\n                        replaceShowingTiles.push(`${col+i}${row+j}`);\n                        if(props.tileArr[col+i][row+j] === null) {\n                            clearTiles(col+i, row+j);\n                        }\n                    }\n                }\n            }\n        }\n        props.onupdateShowingTiles(replaceShowingTiles);\n    }\n\n    return (\n        <div className={ props.showingTiles.filter(tile => tile === `${props.colIndex}${props.index}`).length > 0 ? `un-cover tile ${props.colIndex}${props.index}` : `cover tile ${props.colIndex}${props.index}` } onClick={() => selectTile(props.tile)}>\n            {props.tile < 0 ? (\n                <i class=\"fas fa-bomb\"></i>\n            ) : (\n                <div>{props.tile}</div>\n            )}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    showingTiles: state.showingTiles,\n});\n\nconst mapActionsToProps = {\n    onupdateShowingTiles: updateShowingTiles,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps) (Tile);"]},"metadata":{},"sourceType":"module"}