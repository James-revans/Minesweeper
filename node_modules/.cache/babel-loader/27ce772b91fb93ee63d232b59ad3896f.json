{"ast":null,"code":"var _jsxFileName = \"/Users/james/git/minesweeper/src/components/tile/tile.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n  // const [cover, setCover] = useState('cover');\n  const tileEl = useRef(null); // let currentTile = tileEl.current;\n  // currentTile = `${props.rowIndex},${props.index}`;\n\n  function selectTile(item) {\n    if (item === -1) alert(\"You lose!\");else {\n      // setCover('un-cover');\n      // console.log(props.rowIndex);\n      tileEl.current.classList.add(\"un-cover\");\n\n      if (item === 0) {}\n\n      console.log(tileEl);\n    }\n  }\n\n  useEffect(() => {\n    if (props.tile === null) {\n      tileEl.current.classList.add(\"un-cover\");\n    } // tileEl.current = currentTile;\n    // console.log(tileEl.current);\n\n  });\n  return React.createElement(\"div\", {\n    ref: tileEl,\n    className: `tile cover ${props.rowIndex}${props.index}`,\n    onClick: () => selectTile(props.tile),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.tile);\n}\n\nexport default Tile;","map":{"version":3,"sources":["/Users/james/git/minesweeper/src/components/tile/tile.jsx"],"names":["React","useState","useEffect","useCallback","useRef","Tile","props","tileEl","selectTile","item","alert","current","classList","add","console","log","tile","rowIndex","index"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB;AACA,QAAMC,MAAM,GAAGH,MAAM,CAAC,IAAD,CAArB,CAFiB,CAGjB;AACA;;AAEA,WAASI,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAGA,IAAI,KAAK,CAAC,CAAb,EAAgBC,KAAK,CAAC,WAAD,CAAL,CAAhB,KACK;AAED;AACA;AACAH,MAAAA,MAAM,CAACI,OAAP,CAAeC,SAAf,CAAyBC,GAAzB,CAA6B,UAA7B;;AACA,UAAGJ,IAAI,KAAK,CAAZ,EAAe,CAEd;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACH;AACJ;;AACDL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGI,KAAK,CAACU,IAAN,KAAe,IAAlB,EAAwB;AACpBT,MAAAA,MAAM,CAACI,OAAP,CAAeC,SAAf,CAAyBC,GAAzB,CAA6B,UAA7B;AACH,KAHW,CAIZ;AAEA;;AACH,GAPQ,CAAT;AASA,SACI;AAAK,IAAA,GAAG,EAAEN,MAAV;AAAkB,IAAA,SAAS,EAAG,cAAaD,KAAK,CAACW,QAAS,GAAEX,KAAK,CAACY,KAAM,EAAxE;AAA2E,IAAA,OAAO,EAAE,MAAMV,UAAU,CAACF,KAAK,CAACU,IAAP,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACU,IADX,CADJ;AAKH;;AACD,eAAeX,IAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n    // const [cover, setCover] = useState('cover');\n    const tileEl = useRef(null);\n    // let currentTile = tileEl.current;\n    // currentTile = `${props.rowIndex},${props.index}`;\n\n    function selectTile(item) {\n        if(item === -1) alert(\"You lose!\");\n        else {\n\n            // setCover('un-cover');\n            // console.log(props.rowIndex);\n            tileEl.current.classList.add(\"un-cover\");\n            if(item === 0) {\n                \n            }\n            console.log(tileEl);\n        }\n    }\n    useEffect(() => {\n        if(props.tile === null) {\n            tileEl.current.classList.add(\"un-cover\");\n        }\n        // tileEl.current = currentTile;\n        \n        // console.log(tileEl.current);\n    });\n\n    return (\n        <div ref={tileEl} className={`tile cover ${props.rowIndex}${props.index}`} onClick={() => selectTile(props.tile)}>\n            {props.tile}\n        </div>\n    )\n}\nexport default Tile;"]},"metadata":{},"sourceType":"module"}