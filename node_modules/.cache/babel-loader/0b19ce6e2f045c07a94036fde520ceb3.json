{"ast":null,"code":"import _slicedToArray from \"/Users/james/git/minesweeper/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/james/git/minesweeper/src/components/tile/tile.jsx\";\nimport React, { useState, useRef } from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n  const _useState = useState('cover'),\n        _useState2 = _slicedToArray(_useState, 2),\n        cover = _useState2[0],\n        setCover = _useState2[1];\n\n  const tileEl = useRef(nul);\n\n  function selectTile(item) {\n    if (item === -1) alert(\"You lose!\");else {\n      setCover('un-cover');\n      console.log(tileEl);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    ref: props.index,\n    className: `tile ${cover}`,\n    onClick: () => selectTile(props.tile),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.tile);\n}\n\nexport default Tile;","map":{"version":3,"sources":["/Users/james/git/minesweeper/src/components/tile/tile.jsx"],"names":["React","useState","useRef","Tile","props","cover","setCover","tileEl","nul","selectTile","item","alert","console","log","index","tile"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,oBACSH,QAAQ,CAAC,OAAD,CADjB;AAAA;AAAA,QACVI,KADU;AAAA,QACHC,QADG;;AAEjB,QAAMC,MAAM,GAAGL,MAAM,CAACM,GAAD,CAArB;;AACA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAGA,IAAI,KAAK,CAAC,CAAb,EAAgBC,KAAK,CAAC,WAAD,CAAL,CAAhB,KACK;AACDL,MAAAA,QAAQ,CAAC,UAAD,CAAR;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AAEH;AACJ;;AAED,SACI;AAAK,IAAA,GAAG,EAAEH,KAAK,CAACU,KAAhB;AAAuB,IAAA,SAAS,EAAG,QAAOT,KAAM,EAAhD;AAAoD,IAAA,OAAO,EAAE,MAAMI,UAAU,CAACL,KAAK,CAACW,IAAP,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,KAAK,CAACW,IADX,CADJ;AAKH;;AACD,eAAeZ,IAAf","sourcesContent":["import React, {useState, useRef} from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n    const [cover, setCover] = useState('cover');\n    const tileEl = useRef(nul);\n    function selectTile(item) {\n        if(item === -1) alert(\"You lose!\");\n        else {\n            setCover('un-cover');\n            console.log(tileEl);\n\n        }\n    }\n\n    return (\n        <div ref={props.index} className={`tile ${cover}` } onClick={() => selectTile(props.tile)}>\n            {props.tile}\n        </div>\n    )\n}\nexport default Tile;"]},"metadata":{},"sourceType":"module"}