{"ast":null,"code":"import _slicedToArray from \"/Users/james/git/minesweeper/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/james/git/minesweeper/src/components/tile/tile.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n  // const [cover, setCover] = useState('cover');\n  // const itemsRef = useRef([]);\n  // let currentTile = itemsRef.current;\n  // currentTile = `${props.rowIndex},${props.index}`;\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        showTiles = _useState2[0],\n        setShowTiles = _useState2[1];\n\n  let replaceShowingTiles = [];\n\n  function selectTile(item) {\n    replaceShowingTiles = console.log(replaceShowingTiles);\n    setShowTiles(replaceShowingTiles);\n    if (item === -1) alert(\"You lose!\");else {// itemsRef.current[props.rowIndex + (props.index*10)].classList.add(\"un-cover\");\n      // itemsRef.current[10].classList.add(\"un-cover\");\n      // setCover('un-cover');\n      // console.log(props.rowIndex);\n      // itemsRef.current.classList.add(\"un-cover\");\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: showTiles.filter(tile => tile == props.rowIndex + props.index).length > 0 ? `un-cover tile ${props.rowIndex}${props.index}` : `cover tile ${props.rowIndex}${props.index}`,\n    onClick: () => selectTile(props.tile),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.tile);\n}\n\nexport default Tile;","map":{"version":3,"sources":["/Users/james/git/minesweeper/src/components/tile/tile.jsx"],"names":["React","useState","useEffect","useCallback","useRef","Tile","props","showTiles","setShowTiles","replaceShowingTiles","selectTile","item","console","log","alert","filter","tile","rowIndex","index","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB;AACA;AACA;AACA;AAJiB,oBAKiBL,QAAQ,CAAC,EAAD,CALzB;AAAA;AAAA,QAKVM,SALU;AAAA,QAKCC,YALD;;AAMjB,MAAIC,mBAAmB,GAAG,EAA1B;;AAEA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtBF,IAAAA,mBAAmB,GACnBG,OAAO,CAACC,GAAR,CAAYJ,mBAAZ,CADA;AAEAD,IAAAA,YAAY,CAACC,mBAAD,CAAZ;AACA,QAAGE,IAAI,KAAK,CAAC,CAAb,EAAgBG,KAAK,CAAC,WAAD,CAAL,CAAhB,KAEK,CACD;AACA;AAEA;AACA;AACA;AAEH;AACJ;;AAED,SACI;AAAK,IAAA,SAAS,EAAGP,SAAS,CAACQ,MAAV,CAAiBC,IAAI,IAAIA,IAAI,IAAIV,KAAK,CAACW,QAAN,GAAiBX,KAAK,CAACY,KAAxD,EAA+DC,MAA/D,GAAwE,CAAxE,GAA6E,iBAAgBb,KAAK,CAACW,QAAS,GAAEX,KAAK,CAACY,KAAM,EAA1H,GAA+H,cAAaZ,KAAK,CAACW,QAAS,GAAEX,KAAK,CAACY,KAAM,EAA1L;AAA8L,IAAA,OAAO,EAAE,MAAMR,UAAU,CAACJ,KAAK,CAACU,IAAP,CAAvN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACU,IADX,CADJ;AAKH;;AACD,eAAeX,IAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n    // const [cover, setCover] = useState('cover');\n    // const itemsRef = useRef([]);\n    // let currentTile = itemsRef.current;\n    // currentTile = `${props.rowIndex},${props.index}`;\n    const [showTiles, setShowTiles] = useState([]);\n    let replaceShowingTiles = [];\n\n    function selectTile(item) {\n        replaceShowingTiles = \n        console.log(replaceShowingTiles);\n        setShowTiles(replaceShowingTiles);\n        if(item === -1) alert(\"You lose!\");\n\n        else {\n            // itemsRef.current[props.rowIndex + (props.index*10)].classList.add(\"un-cover\");\n            // itemsRef.current[10].classList.add(\"un-cover\");\n\n            // setCover('un-cover');\n            // console.log(props.rowIndex);\n            // itemsRef.current.classList.add(\"un-cover\");\n\n        }\n    }\n\n    return (\n        <div className={ showTiles.filter(tile => tile == props.rowIndex + props.index).length > 0 ? `un-cover tile ${props.rowIndex}${props.index}` : `cover tile ${props.rowIndex}${props.index}` } onClick={() => selectTile(props.tile)}>\n            {props.tile}\n        </div>\n    )\n}\nexport default Tile;"]},"metadata":{},"sourceType":"module"}