{"ast":null,"code":"var _jsxFileName = \"/Users/james/git/minesweeper/src/components/tile/tile.jsx\";\nimport React from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n  props.tile.forEach(item => {\n    props.tile[`${item}`] = React.createRef();\n  });\n\n  function selectTile(item) {\n    if (item === -1) alert(\"You lose!\");\n    props.tile[`${item}`].setAttribute(\"style\", \"color: white\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, props.tile.map((item, index) => React.createElement(\"div\", {\n    ref: props.tile[`${item}`],\n    className: \"tile cover\",\n    onClick: () => selectTile(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, item)));\n}\n\nexport default Tile;","map":{"version":3,"sources":["/Users/james/git/minesweeper/src/components/tile/tile.jsx"],"names":["React","Tile","props","tile","forEach","item","createRef","selectTile","alert","setAttribute","map","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjBA,EAAAA,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmBC,IAAI,IAAI;AACvBH,IAAAA,KAAK,CAACC,IAAN,CAAY,GAAEE,IAAK,EAAnB,IAAwBL,KAAK,CAACM,SAAN,EAAxB;AACH,GAFD;;AAGA,WAASC,UAAT,CAAoBF,IAApB,EAA0B;AACtB,QAAGA,IAAI,KAAK,CAAC,CAAb,EAAgBG,KAAK,CAAC,WAAD,CAAL;AAChBN,IAAAA,KAAK,CAACC,IAAN,CAAY,GAAEE,IAAK,EAAnB,EAAsBI,YAAtB,CAAmC,OAAnC,EAA4C,cAA5C;AACH;;AAED,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACC,IAAN,CAAWO,GAAX,CAAe,CAACL,IAAD,EAAOM,KAAP,KACZ;AAAK,IAAA,GAAG,EAAET,KAAK,CAACC,IAAN,CAAY,GAAEE,IAAK,EAAnB,CAAV;AAAiC,IAAA,SAAS,EAAC,YAA3C;AAAwD,IAAA,OAAO,EAAE,MAAME,UAAU,CAACF,IAAD,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IADL,CADH,CADL,CADJ;AASH;;AACD,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n    props.tile.forEach(item => {\n        props.tile[`${item}`] = React.createRef()\n    })\n    function selectTile(item) {\n        if(item === -1) alert(\"You lose!\");\n        props.tile[`${item}`].setAttribute(\"style\", \"color: white\");\n    }\n\n    return (\n        <div>\n            {props.tile.map((item, index) => (\n                <div ref={props.tile[`${item}`]} className=\"tile cover\" onClick={() => selectTile(item)}>\n                    {item}\n                </div>\n            ))}\n        </div>\n    )\n}\nexport default Tile;"]},"metadata":{},"sourceType":"module"}