{"ast":null,"code":"var _jsxFileName = \"/Users/james/git/minesweeper/src/components/tile/tile.jsx\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n  // const [cover, setCover] = useState('cover');\n  const itemsRef = useRef([]); // let currentTile = itemsRef.current;\n  // currentTile = `${props.rowIndex},${props.index}`;\n\n  function selectTile(item) {\n    if (item === -1) alert(\"You lose!\");else {\n      // setCover('un-cover');\n      // console.log(props.rowIndex);\n      // tileEl.current.classList.add(\"un-cover\");\n      if (item === 0) {}\n\n      console.log(itemsRef);\n      revealBlanks();\n    }\n  }\n\n  const revealBlanks = useCallback(() => {\n    if (props.tile === null) {\n      itemsRef.current.classList.add(\"un-cover\");\n    }\n  });\n  useEffect(() => {// tileEl.current = currentTile;\n    // console.log(tileEl.current);\n  });\n  return React.createElement(\"div\", {\n    ref: el => tileEl.current[props.index + props.rowIndex * 10] = el,\n    className: `tile cover ${props.rowIndex}${props.index}`,\n    onClick: () => selectTile(props.tile),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.tile);\n}\n\nexport default Tile;","map":{"version":3,"sources":["/Users/james/git/minesweeper/src/components/tile/tile.jsx"],"names":["React","useState","useEffect","useCallback","useRef","Tile","props","itemsRef","selectTile","item","alert","console","log","revealBlanks","tile","current","classList","add","el","tileEl","index","rowIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,EAAiDC,MAAjD,QAA8D,OAA9D;AACA,OAAO,aAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB;AACA,QAAMC,QAAQ,GAAGH,MAAM,CAAC,EAAD,CAAvB,CAFiB,CAIjB;AACA;;AAEA,WAASI,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAGA,IAAI,KAAK,CAAC,CAAb,EAAgBC,KAAK,CAAC,WAAD,CAAL,CAAhB,KACK;AAED;AACA;AACA;AACA,UAAGD,IAAI,KAAK,CAAZ,EAAe,CAEd;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAM,MAAAA,YAAY;AACf;AACJ;;AAED,QAAMA,YAAY,GAAGV,WAAW,CAC5B,MAAM;AACF,QAAGG,KAAK,CAACQ,IAAN,KAAe,IAAlB,EAAwB;AACpBP,MAAAA,QAAQ,CAACQ,OAAT,CAAiBC,SAAjB,CAA2BC,GAA3B,CAA+B,UAA/B;AACH;AACJ,GAL2B,CAAhC;AAOAf,EAAAA,SAAS,CAAC,MAAM,CAEZ;AAEA;AACH,GALQ,CAAT;AAOA,SACI;AAAK,IAAA,GAAG,EAAEgB,EAAE,IAAIC,MAAM,CAACJ,OAAP,CAAeT,KAAK,CAACc,KAAN,GAAed,KAAK,CAACe,QAAN,GAAe,EAA7C,IAAoDH,EAApE;AAAwE,IAAA,SAAS,EAAG,cAAaZ,KAAK,CAACe,QAAS,GAAEf,KAAK,CAACc,KAAM,EAA9H;AAAiI,IAAA,OAAO,EAAE,MAAMZ,UAAU,CAACF,KAAK,CAACQ,IAAP,CAA1J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACQ,IADX,CADJ;AAKH;;AACD,eAAeT,IAAf","sourcesContent":["import React, {useState, useEffect, useCallback, useRef} from 'react';\nimport './tile.scss';\n\nfunction Tile(props) {\n    // const [cover, setCover] = useState('cover');\n    const itemsRef = useRef([]);\n\n    // let currentTile = itemsRef.current;\n    // currentTile = `${props.rowIndex},${props.index}`;\n\n    function selectTile(item) {\n        if(item === -1) alert(\"You lose!\");\n        else {\n\n            // setCover('un-cover');\n            // console.log(props.rowIndex);\n            // tileEl.current.classList.add(\"un-cover\");\n            if(item === 0) {\n                \n            }\n            console.log(itemsRef);\n            revealBlanks();\n        }\n    }\n\n    const revealBlanks = useCallback(\n        () => {\n            if(props.tile === null) {\n                itemsRef.current.classList.add(\"un-cover\");\n            }\n        }\n    )\n    useEffect(() => {\n\n        // tileEl.current = currentTile;\n        \n        // console.log(tileEl.current);\n    });\n\n    return (\n        <div ref={el => tileEl.current[props.index + (props.rowIndex*10)] = el} className={`tile cover ${props.rowIndex}${props.index}`} onClick={() => selectTile(props.tile)}>\n            {props.tile}\n        </div>\n    )\n}\nexport default Tile;"]},"metadata":{},"sourceType":"module"}